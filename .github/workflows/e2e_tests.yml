name: E2E tests
on:
  push:
    branches:
      - develop
      - dev-e2e

jobs:
  test-plugin:
    name: Run E2E Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    env:
      API_KEY: ${{secrets.E2E_API_KEY}}
      API_SECRET: ${{secrets.E2E_API_SECRET}}

    steps:
      - name: Create dirs.
        run: |
              mkdir -p kco
      - name: Setup KCO
        uses: actions/checkout@v2
        with:
          path: kco
      - name: Setup Yarn
        run: |
          cd ./kco/tests/e2e/
          yarn install
      # - name: Run Tests
      #   run: |
      #     cd ./kco/tests/e2e/
      #     yarn e2e:test

      - name: Get unformatted variable
        id: vars
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          yarn e2e:fake-test > /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest.txt
          echo ::set-output name=e2e_res::$(cat /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest.txt)

      - name: List dir and path
        run: |
          
          echo "ls command"
          ls -la /home/
          ls -la /home/runner/
          ls -la /home/runner/work/
          ls -la /home/runner/work/klarna-checkout-for-woocommerce/
          ls -la /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/
          ls -la /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/

      - name: Remove new lines
        id: newlineformat
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          tr -d '\n' < outputs/rest.txt >> /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest2.txt

      - name: Remove all before object
        id: formatbefore
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          sed 's/^.*{/{/' < /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest2.txt >> /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest3.txt

      - name: Remove all after object
        id: formatafter
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          sed 's/}.*/}/' < /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest3.txt >> /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest4.txt
      
      - name: Remove last character
        id: formatlast
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          sed 's/.$//' < /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest4.txt >> /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest5.txt

      - name: Get formatted variable
        id: cleanvar
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          echo ::set-output name=e2e_res_2::$(cat /home/runner/work/klarna-checkout-for-woocommerce/klarna-checkout-for-woocommerce/kco/tests/e2e/outputs/rest5.txt)
    
      - name: Get PHP version
        id: phpver
        shell: bash
        run: |
          cd ./kco/tests/e2e/
          echo ::set-output name=php_ver::$(php -version)

      - name: Send custom data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            ${{ steps.cleanvar.outputs.e2e_res_2}}, "php_version": "${{ steps.phpver.outputs.php_ver}}" }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
